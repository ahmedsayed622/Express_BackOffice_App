{
  "info": {
    "name": "Express BackOffice - Compliance API",
    "description": "Complete API collection for the Compliance (CmpDorman*) service with unified error handling and hybrid Oracle connectivity",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "12345678-1234-1234-1234-123456789abc"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health",
      "item": [
        {
          "name": "Check Integrations",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/health/integrations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "health", "integrations"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has success field', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});",
                  "",
                  "pm.test('Both drivers are connected', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.sequelize.status).to.eql('connected');",
                  "    pm.expect(jsonData.data.oracledb.status).to.eql('connected');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Client Monthly Data",
      "item": [
        {
          "name": "List All",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/client-monthly-data",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "client-monthly-data"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is successful', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Data >= 2025",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/client-monthly-data/gte-2025",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "client-monthly-data", "gte-2025"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains 2025+ data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "    if (jsonData.data.length > 0) {",
                  "        pm.expect(jsonData.data[0].DATA_YEAR).to.be.at.least(2025);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Filter by Year (2025)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/client-monthly-data/year/2025",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "client-monthly-data", "year", "2025"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is successful', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Filter by Year and Month (2025/09)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/client-monthly-data/year/2025/month/9",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "client-monthly-data", "year", "2025", "month", "9"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is successful', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Inactivity to Year (2024)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/client-monthly-data/inactivity-to-year/2024",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "client-monthly-data", "inactivity-to-year", "2024"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is successful', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Inactivity to Year and Month (2024/12)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/client-monthly-data/inactivity-to-year/2024/month/12",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "client-monthly-data", "inactivity-to-year", "2024", "month", "12"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is successful', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Search",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/client-monthly-data/search?q=test",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "client-monthly-data", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "test"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is successful', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/client-monthly-data/12345",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "client-monthly-data", "12345"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 404', function () {",
                  "    pm.expect([200, 404]).to.include(pm.response.code);",
                  "});",
                  "",
                  "pm.test('Response has success field', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Client Control",
      "item": [
        {
          "name": "List All",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/client-control",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "client-control"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is successful', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Summary",
      "item": [
        {
          "name": "List All",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/summary",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "summary"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is successful', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Latest by Year (2025)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/summary/latest/2025",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "summary", "latest", "2025"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is successful', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Summary View",
      "item": [
        {
          "name": "List All",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/summary-view",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "summary-view"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is successful', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.eql(true);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Procedures",
      "item": [
        {
          "name": "Dormant Orchestrator (No Timeout)",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/procedures/dormant-orchestrator?timeout=0",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "procedures", "dormant-orchestrator"],
              "query": [
                {
                  "key": "timeout",
                  "value": "0"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200, 409, or 423', function () {",
                  "    pm.expect([200, 409, 423]).to.include(pm.response.code);",
                  "});",
                  "",
                  "pm.test('Response has appropriate structure', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    ",
                  "    if (pm.response.code === 200) {",
                  "        pm.expect(jsonData.success).to.eql(true);",
                  "        pm.expect(jsonData.driver).to.eql('node-oracledb');",
                  "        pm.expect(jsonData.status).to.eql('COMPLETED');",
                  "    } else if (pm.response.code === 409) {",
                  "        pm.expect(jsonData.success).to.eql(false);",
                  "        pm.expect(jsonData.code).to.eql('ALREADY_RUNNING');",
                  "    } else if (pm.response.code === 423) {",
                  "        pm.expect(jsonData.success).to.eql(false);",
                  "        pm.expect(jsonData.code).to.eql('TIMEOUT');",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Dormant Orchestrator (30s Timeout)",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/procedures/dormant-orchestrator?timeout=30",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "procedures", "dormant-orchestrator"],
              "query": [
                {
                  "key": "timeout",
                  "value": "30"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200, 409, or 423', function () {",
                  "    pm.expect([200, 409, 423]).to.include(pm.response.code);",
                  "});",
                  "",
                  "pm.test('Response indicates node-oracledb driver if successful', function () {",
                  "    const jsonData = pm.response.json();",
                  "    if (pm.response.code === 200) {",
                  "        pm.expect(jsonData.driver).to.eql('node-oracledb');",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ]
}